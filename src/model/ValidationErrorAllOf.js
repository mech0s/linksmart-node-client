/**
 * LinkSmart Thing Directory
 * API documetnation of the [LinkSmart Thing Directory](https://github.com/linksmart/thing-directory)
 *
 * The version of the OpenAPI document: 1.0.0-beta.22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidationErrorAllOfValidationErrors from './ValidationErrorAllOfValidationErrors';

/**
 * The ValidationErrorAllOf model module.
 * @module model/ValidationErrorAllOf
 * @version 1.0.0-beta.22
 */
class ValidationErrorAllOf {
    /**
     * Constructs a new <code>ValidationErrorAllOf</code>.
     * @alias module:model/ValidationErrorAllOf
     */
    constructor() { 
        
        ValidationErrorAllOf.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidationErrorAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationErrorAllOf} obj Optional instance to populate.
     * @return {module:model/ValidationErrorAllOf} The populated <code>ValidationErrorAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationErrorAllOf();

            if (data.hasOwnProperty('validationErrors')) {
                obj['validationErrors'] = ApiClient.convertToType(data['validationErrors'], [ValidationErrorAllOfValidationErrors]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/ValidationErrorAllOfValidationErrors>} validationErrors
 */
ValidationErrorAllOf.prototype['validationErrors'] = undefined;






export default ValidationErrorAllOf;

